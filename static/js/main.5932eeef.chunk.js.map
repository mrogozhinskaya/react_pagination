{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","isPageFirst","isPageLast","className","cn","disabled","href","onClick","array","i","push","active","getButtons","defaultProps","items","from","to","numbers","n","getNumbers","map","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","indexFrom","indexTo","length","id","onChange","e","itemsPP","parseInt","target","value","htmlFor","page","pageChanged","slice","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAA8B,IAAhBL,EACdM,EAAaN,IAAgBE,EA8CnC,OACE,qBAAIK,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QApBgB,WAClBX,IAAgBK,GAClBJ,EAAaD,EAAc,IAazB,oBA/Ca,WAGjB,IAFA,IAAMY,EAAuB,GADS,WAG7BC,GAOPD,EAAME,KAEF,oBACEP,UAAWC,IAAG,YAAa,CAAEO,OAAQF,IAAMb,IAD7C,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMG,GACVF,QAhBa,WACfX,IAAgBa,GAClBZ,EAAaY,IAUX,SAMGA,KAREA,KAXJA,EAAI,EAAGA,GAAKX,EAAeW,GAAK,EAAI,EAApCA,GA0BT,OAAOD,EA4BJI,GACD,oBAAIT,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IAA3C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QA1BgB,WAClBX,IAAgBM,GAClBL,EAAaD,EAAc,IAmBzB,wBAcRH,EAAWoB,aAAe,CACxBjB,YAAa,GCzFf,IAAMkB,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQP,KAAKQ,GAGf,OAAOD,EDFKE,CAAW,EAAG,IACzBC,KAAI,SAAAF,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB2B,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAWMC,EAAYF,EAAe5B,EAAc4B,EAC3CG,EAAUH,EAAe5B,EAAc,EAI3C,OAFA+B,EAAUA,EAAUb,EAAMc,OAASd,EAAMc,OAAS,EAAID,EAGpD,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiC8B,EAAY,EAD7C,cACoDC,EAAU,EAD9D,eACsEb,EAAMc,OAD5E,OAIA,sBAAKzB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,SAAU,SAACC,GAAD,OAxBSC,EAwBkBC,SAASF,EAAEG,OAAOC,MAAO,IAvBtEZ,EAAe,QACfE,EAAgBO,GAFU,IAACA,GAyBnBG,MAAOX,EALT,UAOE,wBAAQW,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAGJ,uBAAOC,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOoB,EAAMc,OACbjC,QAAS6B,EACT5B,YAAaA,EACbC,aAAc,SAACwC,GAAD,OA9CA,SAACA,GACnBd,EAAec,GA6CaC,CAAYD,MAGtC,6BACGvB,EAAMyB,MAAMb,EAAWC,EAAU,GAAGP,KAAI,SAAAoB,GAAI,OAC3C,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YE5DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5932eeef.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage?: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const isPageFirst = currentPage === 1;\n  const isPageLast = currentPage === numberOfPages;\n\n  const getButtons = (): JSX.Element[] => {\n    const array: JSX.Element[] = [];\n\n    for (let i = 1; i <= numberOfPages; i += 1) {\n      const clickHandler = () => {\n        if (currentPage !== i) {\n          onPageChange(i);\n        }\n      };\n\n      array.push((\n        (\n          <li\n            className={cn('page-item', { active: i === currentPage })}\n            key={i}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${i}`}\n              onClick={clickHandler}\n            >\n              {i}\n            </a>\n          </li>\n        )\n      ));\n    }\n\n    return array;\n  };\n\n  const prevButtonClick = () => {\n    if (currentPage && !isPageFirst) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextButtonClick = () => {\n    if (currentPage && !isPageLast) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isPageFirst })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPageFirst}\n          onClick={prevButtonClick}\n        >\n          «\n        </a>\n      </li>\n      {getButtons()}\n      <li className={cn('page-item', { disabled: isPageLast })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isPageLast}\n          onClick={nextButtonClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nPagination.defaultProps = {\n  currentPage: 1,\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const pageChanged = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const itemsPerPageChanged = (itemsPP: number) => {\n    setCurrentPage(1);\n    setItemsPerPage(itemsPP);\n  };\n\n  const indexFrom = itemsPerPage * currentPage - itemsPerPage;\n  let indexTo = itemsPerPage * currentPage - 1;\n\n  indexTo = indexTo > items.length ? items.length - 1 : indexTo;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexFrom + 1} - ${indexTo + 1} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => itemsPerPageChanged(parseInt(e.target.value, 10))}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => pageChanged(page)}\n      />\n\n      <ul>\n        {items.slice(indexFrom, indexTo + 1).map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}